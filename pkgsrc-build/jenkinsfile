pipeline {
    agent {label "pkgsrc-builder"}

    parameters {
        string(name: "branch", defaultValue: "trunk", description: "Git branch")
        string(name: "package", description: "Package name (ex. www/firefox)")
    }

    environment {
        pkgsrc  = "/usr/pkgsrc"
        target  = "${pkgsrc}/${params.package}"
        prefix  = "/usr/pkg"
        os      = sh(script: "uname", returnStdout: true).trim()
        cpu     = sh(script: "uname -p", returnStdout: true).trim()
        release = sh(script: "uname -r", returnStdout: true).trim()
        www     = "/var/www/pkgsrc/packages/${os}/${cpu}/${release}/All"
        PATH    = "${prefix}/sbin:${prefix}/bin:$PATH"
    }

    stages {
        stage('Checkout') {
            steps {
                dir(pkgsrc) {
                    sh("git checkout ${params.branch}")
                    sh("git pull")
                }
            }
        }
        stage('Build') {
            steps {
                dir(target) {
                    sh("make package clean clean-depends")
                }
            }
        }
    }

    post {
        success {
            sh("test -d ${www} || mkdir ${www}")
            sh("rsync -a ${pkgsrc}/packages/All/ ${www}/")
            sh("pkg_info -X ${www}/*.tgz | gzip -9 > ${www}/pkg_summary.gz")
        }
    }
}

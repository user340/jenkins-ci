pipeline {
    agent {label 'src-builder'}

    environment {
        branch      = "trunk"
        prefix      = "/opt/builds/${branch}/amd64/${BUILD_ID}"
        src         = "/usr/src"
        xsrc        = "/usr/xsrc"
        obj         = "${prefix}-obj"
        tools       = "${prefix}-tools"
        release     = "${prefix}-release"
        dest        = "${prefix}-dest"
        build_cmd   = "./build.sh -m amd64 -B ${BUILD_ID} -D ${dest} -M ${obj} -R ${release} -T ${tools} -X ${xsrc} -x -N0 -j6 -V NETBSD_OFFICIAL_RELEASE=no -V BUILD=yes"
    }

    stages {
        stage('Checkout trunk') {
            steps {
                script {
                    sources = ["${src}", "${xsrc}"]
                    sources.each { source ->
                        dir(source) {
                            sh("hg checkout ${branch}")
                            sh("hg pull && hg update")
                        }
                    }
                }
            }
        }
        stage('Build tools') {
            steps {
                dir(src){
                    sh("mkdir -p ${obj} ${tools} ${dest} ${release}")
                    sh("${build_cmd} tools")
                }
            }
        }
        stage('Build GENERIC kernel') {
            steps {
                dir(src) {
                    sh("${build_cmd} kernel=GENERIC")
                    sh("${build_cmd} releasekernel=GENERIC")
                }
            }
        }
        stage('Build distribution') {
            steps {
                dir(src) {
                    sh("${build_cmd} distribution")
                }
            }
        }
        stage('Build sets') {
            steps {
                dir(src) {
                    sh("${build_cmd} sets")
                }
            }
        }
        stage('Save release') {
            steps {
                sh("rsync -avz ${release}/amd64/ uki@192.168.1.1:/zshare/netbsd-build/")
                sh("rm -fr ${tools} ${obj} ${release} ${dest}")
            }
        }
    }
}
